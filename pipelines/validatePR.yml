# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# This pipeline will be extended to the OneESPT template
# If you are not using the E+D shared hosted pool with windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
trigger: none
pr:
  branches:
    include:
    - dev
    - master
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    sdl:
      credscan:
        suppressionsFile: $(Build.SourcesDirectory)\pipelines\.config\CredScanSuppressions.json
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      jobs:
      - job: build
        pool:
          name: Azure-Pipelines-1ESPT-ExDShared
          image: ubuntu-latest
          os: linux
        steps:
        - checkout: self
          clean: true
          fetchDepth: 1
          submodules: recursive
        
        - task: UseDotNet@2
          displayName: 'Use .NET Core sdk'
          inputs:
            packageType: sdk
            version: 7.0.x
            performMultiLevelLookup: true
            includePreviewVersions: true
            installationPath: $(Agent.ToolsDirectory)/dotnet
        
        - task: DotNetCoreCLI@2
          displayName: "Restore Nuget Packages"
          inputs:
            command: 'restore'
            feedsToUse: 'select'
        
        - task: DotNetCoreCLI@2
          displayName: "Build"
          inputs:
            command: 'build'
        
        - task: DotNetCoreCLI@2
          displayName: "Run Tests"
          inputs:
            command: test
            projects: '**/*Test/*.csproj'
            arguments: '--configuration $(buildConfiguration) --collect "Code Coverage" --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --filter "TestCategory!=CodeSnippetsPipeline"'
        
        - task: PublishTestResults@2
          displayName: "Publish Test Results"
          inputs:
            testResultsFormat: xUnit
            testResultsFiles: '**/*.trx'
            codeCoverageTool: 'cobertura'
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
      
      - job: scan
        pool:
          name: Azure-Pipelines-1ESPT-ExDShared
          image: ubuntu-latest
          os: linux
        steps:
        - checkout: self
          clean: true
          fetchDepth: 1
          submodules: recursive
