# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# This pipeline will be extended to the OneESPT template
# If you are not using the E+D shared hosted pool with windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - GraphWebApi/*
    - GraphSnippetsReflection/*
pr: none
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
  - repository: ReleasePipelines
    type: git
    name: "Graph Developer Experiences/release-pipelines"
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows
    sdl:
      sourceRepositoriesToScan:
        exclude: 
        - repository: ReleasePipelines
      credscan:
        suppressionsFile: $(Build.SourcesDirectory)\pipelines\.config\CredScanSuppressions.json
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: BuildAndPublish
      jobs:
      - job: Build
        steps:
        - checkout: self
          clean: true
          fetchDepth: 1
          submodules: true
        - task: UseDotNet@2
          displayName: 'Use .NET 6'
          inputs:
            version: 6.x
        
        - task: UseDotNet@2
          displayName: 'Use .NET Core sdk'
          inputs:
            packageType: sdk
            version: 8.0.x
            installationPath: $(Agent.ToolsDirectory)/dotnet
        
        - task: DotNetCoreCLI@2
          displayName: "Restore Nuget Packages"
          inputs:
            command: 'restore'
            feedsToUse: 'select'
        
        - task: DotNetCoreCLI@2
          displayName: "Build"
          inputs:
            command: 'build'
        
        - task: DotNetCoreCLI@2
          displayName: "Run Tests"
          inputs:
            command: test
            projects: '**/*Test/*.csproj'
            arguments: '--configuration $(buildConfiguration) --collect "Code Coverage" --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --filter "TestCategory!=CodeSnippetsPipeline"'
        
        - task: EsrpCodeSigning@5
          displayName: 'ESRP CodeSigning'
          inputs:
            ConnectedServiceName: 'Federated DevX ESRP Managed Identity Connection'
            AppRegistrationClientId: '65035b7f-7357-4f29-bf25-c5ee5c3949f8'
            AppRegistrationTenantId: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'
            AuthAKVName: 'akv-prod-eastus'
            AuthCertName: 'ReferenceLibraryPrivateCert'
            AuthSignCertName: 'ReferencePackagePublisherCertificate'
            FolderPath: $(System.DefaultWorkingDirectory)
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                  {
                      "keyCode": "CP-230012",
                      "operationSetCode": "SigntoolSign",
                      "parameters": [
                      {
                          "parameterName": "OpusName",
                          "parameterValue": "Microsoft"
                      },
                      {
                          "parameterName": "OpusInfo",
                          "parameterValue": "http://www.microsoft.com"
                      },
                      {
                          "parameterName": "FileDigest",
                          "parameterValue": "/fd \"SHA256\""
                      },
                      {
                          "parameterName": "PageHash",
                          "parameterValue": "/NPH"
                      },
                      {
                          "parameterName": "TimeStamp",
                          "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                      }
                      ],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  },
                  {
                      "keyCode": "CP-230012",
                      "operationSetCode": "SigntoolVerify",
                      "parameters": [ ],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  }
              ]
            SessionTimeout: 20
            MaxConcurrency: 50
            MaxRetryAttempts: 5
            PendingAnalysisWaitTimeoutMinutes: 5
       
        - task: PublishTestResults@2
          displayName: "Publish Test Results"
          condition: succeededOrFailed()
          inputs:
            testResultsFormat: xUnit
            testResultsFiles: '**/*.trx'
            codeCoverageTool: 'cobertura'
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
        
        - task: DotNetCoreCLI@2
          displayName: 'Publish Artifacts'
          inputs:
            command: 'publish'
            publishWebProjects: true
            zipAfterPublish: true
            arguments: '--configuration $(buildConfiguration) --nologo --output $(Build.ArtifactStagingDirectory) '

        # https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/outputs
        templateContext:
          outputs:
          - output: pipelineArtifact
            path: $(Build.ArtifactStagingDirectory)
            artifact: drop

      - template: pipelines/templates/checkout-and-copy-1es.yml@ReleasePipelines
        parameters:
          directory: 'microsoft-graph-devx-api'
          repoName: ReleasePipelines
          dependsOn: ['Build']

    - stage: DeployStaging
      condition: and(contains(variables['build.sourceBranch'], 'refs/heads/master'), succeeded())
      dependsOn: BuildAndPublish
      jobs:
      - deployment: staging  
        templateContext:
          type: releaseJob
          isProduction: false
          inputs:
          - input: pipelineArtifact
            artifactName: drop
            targetPath: $(Build.ArtifactStagingDirectory)
        environment: graphexplorerapi-staging
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureRmWebAppDeployment@4
                displayName: Staging
                inputs:
                  azureSubscription: 'Federated DevX API Managed Identity'
                  WebAppName: graphexplorerapi
                  deployToSlotOrASE: true
                  ResourceGroupName: 'Graph-Explorer-API'
                  packageForLinux: '$(Build.ArtifactStagingDirectory)/GraphWebApi.zip'
                  JSONFiles: '**/appsettings.json'
                  SlotName: 'staging'

              - task: AzureAppServiceManage@0
                displayName: 'Restart Azure App Service: graphexplorerapi staging'
                inputs:
                  azureSubscription: 'Federated DevX API Managed Identity'
                  Action: 'Restart Azure App Service'
                  WebAppName: graphexplorerapi
                  SpecifySlotOrASE: true
                  ResourceGroupName: 'Graph-Explorer-API'
                  Slot: 'staging'


    - stage: DeployProduction
      condition: and(contains(variables['build.sourceBranch'], 'refs/heads/master'), succeeded())
      dependsOn: [DeployStaging, BuildAndPublish]
      jobs:
      - deployment: production
        templateContext:
          type: releaseJob
          isProduction: true
        environment: graphexplorerapi-production
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureAppServiceManage@0
                displayName: 'Manage Azure App Service - Slot Swap'
                inputs:
                  azureSubscription: 'Federated DevX API Managed Identity'
                  WebAppName: graphexplorerapi
                  ResourceGroupName: 'Graph-Explorer-API'
                  SourceSlot: staging

              - task: AzureAppServiceManage@0
                displayName: 'Restart Azure App Service: graphexplorerapi'
                inputs:
                  azureSubscription: 'Federated DevX API Managed Identity'
                  Action: 'Restart Azure App Service'
                  WebAppName: graphexplorerapi
                  SpecifySlotOrASE: true
                  ResourceGroupName: 'Graph-Explorer-API'

              - task: GitHubRelease@1
                displayName: 'GitHub release (v$(Build.BuildNumber)-$(Build.BuildId))'
                inputs:
                  gitHubConnection: 'Github-MaggieKimani1'
                  action: edit
                  tag: 'v$(Build.BuildNumber)'
                  title: 'DevX API - v$(Build.BuildNumber)'
                  assets: '$(Build.ArtifactStagingDirectory)/drop/*.zip'
                  changeLogType: issueBased