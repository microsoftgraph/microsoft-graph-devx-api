steps:
- pwsh: |
    Write-Host "About to add files....." -ForegroundColor Green
    $diffResult = & {git diff}
    if($diffResult -eq $null) {
      Write-Host "##vso[task.setvariable variable=shouldPushBranch]false"
      Write-Host "No changes to commit." -ForegroundColor Green
    } else {
      git add . | Write-Host
      
      # Set commit message
      $commitMessage = $env:COMMITMESSAGE
      if ([string]::IsNullOrWhiteSpace($commitMessage))
      {
        $commitMessage = "Update generated files with build $env:BUILD_BUILDID"
      }
           
      if ($env:BUILD_REASON -eq 'Manual') # Skip CI if manually running this pipeline.
      {
        git commit -m "$commitMessage [skip ci]" | Write-Host
      }
      else
      {
        git commit -m $commitMessage | Write-Host
      }
      Write-Host "Added and commited generated files." -ForegroundColor Green
      Write-Host "##vso[task.setvariable variable=shouldPushBranch]true"
    }
  displayName: 'Git: stage and commit generated files'
  workingDirectory: 'microsoft-graph-docs'

- pwsh: |
    git push --set-upstream origin $env:BRANCHNAME | Write-Host
    Write-Host "Pushed the results of the build to the $env:BRANCHNAME branch." -ForegroundColor Green
  displayName: 'Git: push updates'
  workingDirectory: 'microsoft-graph-docs'
  condition: and(succeeded(), eq(variables.shouldPushBranch, 'true'))